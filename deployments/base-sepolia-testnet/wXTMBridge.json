{
  "address": "0x52610316B50238d0f6259691762179A3d8E87908",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wXTM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "targetTariAddress",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnwrapped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "targetTariAddress",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "bridgeToTari",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "targetTariAddress",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validAfter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validBefore",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "bridgeToTariWithAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9efe65401f851a471b6e8aed32043cc02d2ff06f74018554b6e1e62941905fde",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x50e2a33B9E04e78bF1F1d1F94b0be95Be63C23e7",
    "contractAddress": null,
    "transactionIndex": 27,
    "gasUsed": "455510",
    "logsBloom": "0x
    "blockHash": "0xd53e78fbeaeabc601b193888d5b69634ee178695eb005672f45519b1e71135c4",
    "transactionHash": "0x9efe65401f851a471b6e8aed32043cc02d2ff06f74018554b6e1e62941905fde",
    "logs": [
      {
        "transactionIndex": 27,
        "blockNumber": 24260700,
        "transactionHash": "0x9efe65401f851a471b6e8aed32043cc02d2ff06f74018554b6e1e62941905fde",
        "address": "0x52610316B50238d0f6259691762179A3d8E87908",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000050e2a33b9e04e78bf1f1d1f94b0be95be63c23e7"
        ],
        "data": "0x",
        "logIndex": 77,
        "blockHash": "0xd53e78fbeaeabc601b193888d5b69634ee178695eb005672f45519b1e71135c4"
      }
    ],
    "blockNumber": 24260700,
    "cumulativeGasUsed": "2931759",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4A7cC39b7E7b5F39B6Dc4aCa4098A02F9Ecde3B0",
    "0x50e2a33B9E04e78bF1F1d1F94b0be95Be63C23e7"
  ],
  "numDeployments": 1,
  "solcInputHash": "5fa7431c54c1a400eb86dfac617ec4f9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wXTM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"targetTariAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnwrapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"targetTariAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"bridgeToTari\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"targetTariAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"bridgeToTariWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wXTMBridge.sol\":\"wXTMBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/interfaces/IwXTM.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.22;\\n\\ninterface IwXTM {\\n    function mint(address _to, uint256 _amount) external;\\n\\n    function burn(address _from, uint256 _amount) external;\\n\\n    function receiveWithAuthorization(\\n        address from,\\n        address to,\\n        uint256 value,\\n        uint256 validAfter,\\n        uint256 validBefore,\\n        bytes32 nonce,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x4ba9258a640c277f4ed2878c46bface0b8c724ec9e2b89bde8328e0afd4be0c3\",\"license\":\"UNLICENSED\"},\"contracts/wXTMBridge.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.22;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\nimport { IwXTM } from \\\"./interfaces/IwXTM.sol\\\";\\n\\ncontract wXTMBridge is Ownable {\\n    address private immutable wXTM;\\n\\n    event TokensUnwrapped(address indexed from, string targetTariAddress, uint256 indexed amount);\\n\\n    constructor(address _wXTM, address _delegate) Ownable(_delegate) {\\n        wXTM = _wXTM;\\n    }\\n\\n    function bridgeToTari(string memory targetTariAddress, uint256 value) external {\\n        IERC20(wXTM).transferFrom(msg.sender, address(this), value);\\n\\n        IwXTM(wXTM).burn(address(this), value);\\n\\n        emit TokensUnwrapped(msg.sender, targetTariAddress, value);\\n    }\\n\\n    function bridgeToTariWithAuthorization(\\n        string memory targetTariAddress,\\n        uint256 value,\\n        uint256 validAfter,\\n        uint256 validBefore,\\n        bytes32 nonce,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        IwXTM(wXTM).receiveWithAuthorization(msg.sender, address(this), value, validAfter, validBefore, nonce, v, r, s);\\n\\n        IwXTM(wXTM).burn(address(this), value);\\n\\n        emit TokensUnwrapped(msg.sender, targetTariAddress, value);\\n    }\\n}\\n\",\"keccak256\":\"0x4396b47325121b06d47f0df99b4a7cd01fb726aa41b9453822e7a5e19daec675\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161080738038061080783398101604081905261002f916100e6565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161007a565b50506001600160a01b0316608052610119565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e157600080fd5b919050565b600080604083850312156100f957600080fd5b610102836100ca565b9150610110602084016100ca565b90509250929050565b6080516106bf6101486000396000818160e0015281816101720152818161027f01526102fe01526106bf6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806361d1e52e1461005c578063715018a6146100715780638da5cb5b14610079578063ea723be214610098578063f2fde38b146100ab575b600080fd5b61006f61006a366004610513565b6100be565b005b61006f61021c565b600054604080516001600160a01b039092168252519081900360200190f35b61006f6100a6366004610558565b610230565b61006f6100b93660046105e8565b6103b0565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610131573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101559190610618565b50604051632770a7eb60e21b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156101be57600080fd5b505af11580156101d2573d6000803e3d6000fd5b5050505080336001600160a01b03167f5e974964636f3e9c92610e97fe82ff029af00846529a2c93194b9671c43a93a784604051610210919061063a565b60405180910390a35050565b6102246103f3565b61022e6000610420565b565b6040516377aadf6360e11b815233600482015230602482015260448101889052606481018790526084810186905260a4810185905260ff841660c482015260e4810183905261010481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ef55bec69061012401600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b5050604051632770a7eb60e21b8152306004820152602481018a90527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169250639dc29fac9150604401600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b5050505086336001600160a01b03167f5e974964636f3e9c92610e97fe82ff029af00846529a2c93194b9671c43a93a78a60405161039e919061063a565b60405180910390a35050505050505050565b6103b86103f3565b6001600160a01b0381166103e757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103f081610420565b50565b6000546001600160a01b0316331461022e5760405163118cdaa760e01b81523360048201526024016103de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261049757600080fd5b813567ffffffffffffffff808211156104b2576104b2610470565b604051601f8301601f19908116603f011681019082821181831017156104da576104da610470565b816040528381528660208588010111156104f357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561052657600080fd5b823567ffffffffffffffff81111561053d57600080fd5b61054985828601610486565b95602094909401359450505050565b600080600080600080600080610100898b03121561057557600080fd5b883567ffffffffffffffff81111561058c57600080fd5b6105988b828c01610486565b9850506020890135965060408901359550606089013594506080890135935060a089013560ff811681146105cb57600080fd5b979a969950949793969295929450505060c08201359160e0013590565b6000602082840312156105fa57600080fd5b81356001600160a01b038116811461061157600080fd5b9392505050565b60006020828403121561062a57600080fd5b8151801515811461061157600080fd5b60006020808352835180602085015260005b818110156106685785810183015185820160400152820161064c565b506000604082860101526040601f19601f830116850101925050509291505056fea264697066735822122018a76d543c1e326552606b759ed6810f18f7c25086a8e7df7c58a3a07c85d0de64736f6c63430008160033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806361d1e52e1461005c578063715018a6146100715780638da5cb5b14610079578063ea723be214610098578063f2fde38b146100ab575b600080fd5b61006f61006a366004610513565b6100be565b005b61006f61021c565b600054604080516001600160a01b039092168252519081900360200190f35b61006f6100a6366004610558565b610230565b61006f6100b93660046105e8565b6103b0565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610131573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101559190610618565b50604051632770a7eb60e21b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156101be57600080fd5b505af11580156101d2573d6000803e3d6000fd5b5050505080336001600160a01b03167f5e974964636f3e9c92610e97fe82ff029af00846529a2c93194b9671c43a93a784604051610210919061063a565b60405180910390a35050565b6102246103f3565b61022e6000610420565b565b6040516377aadf6360e11b815233600482015230602482015260448101889052606481018790526084810186905260a4810185905260ff841660c482015260e4810183905261010481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ef55bec69061012401600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b5050604051632770a7eb60e21b8152306004820152602481018a90527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169250639dc29fac9150604401600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b5050505086336001600160a01b03167f5e974964636f3e9c92610e97fe82ff029af00846529a2c93194b9671c43a93a78a60405161039e919061063a565b60405180910390a35050505050505050565b6103b86103f3565b6001600160a01b0381166103e757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103f081610420565b50565b6000546001600160a01b0316331461022e5760405163118cdaa760e01b81523360048201526024016103de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261049757600080fd5b813567ffffffffffffffff808211156104b2576104b2610470565b604051601f8301601f19908116603f011681019082821181831017156104da576104da610470565b816040528381528660208588010111156104f357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561052657600080fd5b823567ffffffffffffffff81111561053d57600080fd5b61054985828601610486565b95602094909401359450505050565b600080600080600080600080610100898b03121561057557600080fd5b883567ffffffffffffffff81111561058c57600080fd5b6105988b828c01610486565b9850506020890135965060408901359550606089013594506080890135935060a089013560ff811681146105cb57600080fd5b979a969950949793969295929450505060c08201359160e0013590565b6000602082840312156105fa57600080fd5b81356001600160a01b038116811461061157600080fd5b9392505050565b60006020828403121561062a57600080fd5b8151801515811461061157600080fd5b60006020808352835180602085015260005b818110156106685785810183015185820160400152820161064c565b506000604082860101526040601f19601f830116850101925050509291505056fea264697066735822122018a76d543c1e326552606b759ed6810f18f7c25086a8e7df7c58a3a07c85d0de64736f6c63430008160033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5886,
        "contract": "contracts/wXTMBridge.sol:wXTMBridge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}